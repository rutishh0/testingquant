# Build stage
FROM golang:1.21-alpine AS builder

# Set working directory
WORKDIR /app

# IMPORTANT: Koyeb build context is the repo root. Explicitly copy the mesh-server module files
# go.sum will be generated by `go mod tidy`
COPY mesh-server/go.mod ./
RUN go mod tidy

# Copy mesh-server sources only
COPY mesh-server/. .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o mesh-server .

# Final stage
FROM alpine:latest

# Install ca-certificates and wget for healthcheck
RUN apk --no-cache add ca-certificates wget

# Create non-root user
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/mesh-server .

# Change ownership to non-root user
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Run the application
CMD ["./mesh-server"] 